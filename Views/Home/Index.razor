@page "/"
@using System.Globalization
@using Microsoft.AspNetCore.Mvc
@using WorkoutTrackerWebsite.Controllers
@using WorkoutTrackerWebsite.Models
@inject WorkoutController WorkoutController

<title>workout list</title>

<body>
    <h1>Add a new workout</h1>
    <form method="post">
        <label asp-for="NewWorkout.Date"></label>
        <input asp-for="NewWorkout.Date" />
        <span asp-validation-for="NewWorkout.Date"></span>

        <label asp-for="NewWorkout.Name"></label>
        <input asp-for="NewWorkout.Name" />

        <label asp-for="NewWorkout.Reps"></label>
        <input asp-for="NewWorkout.Reps" />
        <span asp-validation-for="NewWorkout.Reps"></span>

        <label asp-for="NewWorkout.Sets"></label>
        <input asp-for="NewWorkout.Sets" />
        <span asp-validation-for="NewWorkout.Sets"></span>

        <input type="submit" value="Add Workout" />
    </form>

    <h1>Previous workouts</h1>
    <table>
        <thead>
            <th>Date</th>
            <th>Workout Name</th>
            <th>Weight</th>
            <th>Reps</th>
            <th>Sets</th>
        </thead>
        <tbody>
            @if (workouts is not null && workouts.Count() is not 0)
            {
                foreach (Workout? workout in workouts)
                {
                    <tr>
                        <td>@workout.Date.ToString("d")</td>
                        <td>@workout.Name</td>
                        <td>@workout.Weight</td>
                        <td>@workout.Reps</td>
                        <td>@workout.Sets</td>
                    </tr>
                }
            }
            else
            {
                <p>No workouts avalible yet</p>
            }
        </tbody>
    </table>
</body>
<scripts>
    <partial name="_ValidationScriptsPartial" />
</scripts>

@code {
    List<Workout>? workouts { get; set; } = new();
    public Action? OnUpdateWorkouts;

    protected override void OnInitialized()
    {
        OnUpdateWorkouts += UpdateWorkouts;
        UpdateWorkouts();
    }

    public async void UpdateWorkouts()
    {
        ActionResult<List<Workout>> results = await WorkoutController.GetAll();
        workouts =  results.Value;
    }
}